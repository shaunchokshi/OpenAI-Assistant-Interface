version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    command: ["node", "--experimental-specifier-resolution=node", "production-server.js"]
    environment:
      - NODE_ENV=production
      # Set a clear database URL that uses the postgres service
      - DATABASE_URL=postgres://${PGUSER:-admin}:${PGPASSWORD:-password}@postgres:5432/${PGDATABASE:-assistants_platform}
      - SESSION_SECRET=${SESSION_SECRET:-your_session_secret}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Make sure the standard PostgreSQL environment variables are set correctly
      - PGHOST=postgres
      - PGUSER=${PGUSER:-admin}
      - PGPASSWORD=${PGPASSWORD:-password}
      - PGDATABASE=${PGDATABASE:-assistants_platform}
      - PGPORT=5432
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_RELAY_SERVER=${SMTP_RELAY_SERVER}
      - SMTP_RELAY_PORT=${SMTP_RELAY_PORT}
      - SMTP_RELAY_USER=${SMTP_RELAY_USER}
      - SMTP_RELAY_PASS=${SMTP_RELAY_PASS}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${PGUSER:-admin}
      - POSTGRES_PASSWORD=${PGPASSWORD:-password}
      - POSTGRES_DB=${PGDATABASE:-assistants_platform}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-admin} -d ${PGDATABASE:-assistants_platform}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    ports:
      - "5432:5432"

volumes:
  postgres_data: