services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    command: ["node", "--experimental-specifier-resolution=node", "production-server.js"]
    container_name: oai-app
    environment:
      - NODE_ENV=production
      # Set a clear database URL that uses the postgres service
      - DATABASE_URL=postgres://${PGUSER}:${PGPASSWORD}@postgres:5432/${PGDATABASE}
      - SESSION_SECRET=${SESSION_SECRET}
#      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Make sure the standard PostgreSQL environment variables are set correctly
      - PGHOST=postgres
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_RELAY_SERVER=${SMTP_RELAY_SERVER}
      - SMTP_RELAY_PORT=${SMTP_RELAY_PORT}
      - SMTP_RELAY_USER=${SMTP_RELAY_USER}
      - SMTP_RELAY_PASSWORD=${SMTP_RELAY_PASSWORD}
      - GOOGLE_ID=${GOOGLE_ID}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - GOOGLE_CALLBACK=${GOOGLE_CALLBACK}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GITHUB_CALLBACK=${GITHUB_CALLBACK}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - openai-assistant-interface_app_logs:/app/logs
      - openai-assistant-interface_app_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  postgres:
    image: postgres:14-alpine
    container_name: oai-db
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_PORT=${PGPORT}
    ports:
      - "${PGPORT}:${PGPORT}"
    volumes:
      - openai-assistant-interface_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  openai-assistant-interface_app_logs:
    external: true
  openai-assistant-interface_app_uploads:
    external: true
  openai-assistant-interface_postgres_data:
    external: true
